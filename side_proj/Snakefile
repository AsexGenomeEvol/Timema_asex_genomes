import re

timema = ['1_Tdi', '1_Tps',
          '2_Tcm', '2_Tsi',
          '3_Tce', '3_Tms',
          '4_Tbi', '4_Tte',
          '5_Tge', '5_Tpa']

trimmed_reads = []
# genomescope_files = []
mapping_indices = []

with open('A_mapping_and_preprocessing/resequencing_samples') as tab :
	tab.readline()
	for textline in tab :
		line = textline.split()
		#  following line just takes the first sample, because I am renalysing only this one
		# if line[2][-2:] == "01" :
		# 	genomescope_files.append("data/" + line[1] + "/genomescope/" + line[2])
		trimmed_reads.append("data/" + line[1] + "/trimmed_reads/" + line[2])
		mapping_indices.append("data/" + line[1] + "/mapping/" + line[2] + "_to_b3v08.bam.bai")
		delly_calls.append("data/" + line[1] + "/variant_calls/" + line[2] + "/" + line[2] + "_delly.bcf")

### if environmental variable USE_LOCAL contains anything, it will compute on /scratch/local
cluster_script = os.environ.get("USE_LOCAL")
if cluster_script == None :
	cluster_script = ""
else :
	cluster_script = "scripts/use_local.sh "

rule trim_all :
	input :
		expand(trimmed_reads)

# rule genomescope_all :
# 	input :
# 		expand(genomescope_outputs)

rule map_all :
	input :
		expand(mapping_indices)

rule delly_all :
	input :
		expand(delly_calls)

rule trim_reads :
	threads : 16
	resources : mem=80000000, tmp=150000
	input : "A_mapping_and_preprocessing/Illumina-PE_adapters.fa", "data/{sp}/raw_reads/{sample}"
	output : "data/{sp}/trimmed_reads/{sample}"
	shell : cluster_script + "A_mapping_and_preprocessing/trim_reads.sh {wildcards.sp} {wildcards.sample} {input} {output}"

# genome profiling is done on the refence genomes
# rule genomescope :
# 	threads : 16
# 	resources : mem=64000000, tmp=100000
# 	input : "data/{sp}/trimmed_reads/{sample}"
# 	output : "data/{sp}/genomescope/{sample}"
# 	shell : cluster_script + "B_variant_calling/genomescope.sh {input} {output}"

rule index_genome :
	threads : 1
	resources: mem=20000000, tmp=20000
	input : "data/{sp}/reference/{sp}_b3v08.fasta.gz"
	output : "data/{sp}/reference/{sp}_b3v08.fasta.gz.bwt"
	shell : cluster_script + "A_mapping_and_preprocessing/index_fa_bwa.sh {input} data/{wildcards.sp}/reference/{wildcards.sp}_b3v08.fasta.gz."

rule map_reads :
	threads : 16
	resources : mem=104857600, tmp=60000
	input : "data/{sp}/reference/{sp}_b3v08.fasta.gz.bwt", "data/{sp}/trimmed_reads/{sample}"
	output : "data/{sp}/mapping/{sample}_to_b3v08.bam"
	shell :
		cluster_script + "A_mapping_and_preprocessing/map_reads.sh {wildcards.sample} {wildcards.sp} data/{wildcards.sp}/trimmed_reads/{wildcards.sample}/*_R[12]*q.gz data/{wildcards.sp}/reference/{wildcards.sp}_b3v08.fasta.gz.* {output}"

rule index_bam :
	threads : 1
	resources : mem=20000000, tmp=20000
	input : "data/{sp}/mapping/{sample}_to_b3v08.bam"
	output : "data/{sp}/mapping/{sample}_to_b3v08.bam.bai"
	shell : cluster_script + "A_mapping_and_preprocessing/index_bam.sh {input} {output}"

rule call_delly :
	threads : 1
	resources : mem=200000000, tmp=50000
	input : "data/{sp}/reference/{sp}_b3v08.fasta.gz", "data/{sp}/mapping/{sample}_to_b3v08.bam", "data/{sp}/mapping/{sample}_to_b3v08.bam.bai"
	output : "data/{sp}/variant_calls/{sample}/{sample}_delly.bcf"
	shell : cluster_script + "E_structural_variation_calling/delly.sh {input} {output}"

rule index_fasta :
	threads : 1
	resources : mem=20000000, tmp=10000
	input : "data/{sp}/reference/{sp}_b3v08.fasta.gz"
	output : "data/{sp}/reference/{sp}_b3v08.fasta.gz.fai"
	shell : cluster_script + "A_mapping_and_preprocessing/index_fa_sam.sh {input} {output}"

rule call_manta :
	threads : 32
	resources : mem=200000000, tmp=50000
	input : "data/{sp}/reference/{sp}_b3v08.fasta.gz", "data/{sp}/reference/{sp}_b3v08.fasta.gz.fai", "data/{sp}/mapping/{sample}_to_b3v08.bam", "data/{sp}/mapping/{sample}_to_b3v08.bam.bai"
	output : "data/{sp}/variant_calls/{sample}/{sample}_manta"
	shell : cluster_script + "E_structural_variation_calling/delly.sh {input} {output}"